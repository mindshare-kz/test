const API_URL = "https://script.google.com/macros/s/AKfycbwELaIFgk_a83u2uxbxT2nfaHRuuVzVVUfzI2CunauNt2TsGsTxp6XPr-a3mgcmGkfEMQ/exec";

const loginInput = document.getElementById("login");
const checkBtn = document.getElementById("checkLogin");
const passwordSection = document.getElementById("passwordSection");
const passwordInput = document.getElementById("password");
const submitBtn = document.getElementById("submitBtn");
const message = document.getElementById("message");

let currentLogin = "";
let isNewUser = false;

// === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ ===
checkBtn.onclick = async () => {
  const login = loginInput.value.trim();
  if (!login) return alert("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω");

  message.textContent = "–ü—Ä–æ–≤–µ—Ä—è–µ–º...";
  passwordSection.style.display = "none";

  try {
    const res = await fetch(API_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        action: "checkLogin",
        login
      })
    });

    const data = await res.json();

    if (data.status === "not_found") {
      message.textContent = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå";
      return;
    }

    currentLogin = login;
    isNewUser = data.status === "new_user";

    passwordSection.style.display = "block";
    submitBtn.textContent = isNewUser ? "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å" : "–í–æ–π—Ç–∏";
    message.textContent = isNewUser
      ? "–ü–µ—Ä–≤—ã–π –≤—Ö–æ–¥ ‚Äî –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å üîí"
      : "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å üîë";
  } catch (err) {
    console.error(err);
    message.textContent = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ‚ùó";
  }
};

// === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ / –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è ===
submitBtn.onclick = async () => {
  const password = passwordInput.value.trim();
  if (!password) return alert("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å");

  const payload = {
    action: isNewUser ? "setPassword" : "login",
    login: currentLogin,
    password
  };

  try {
    const res = await fetch(API_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload)
    });

    const data = await res.json();

    if (data.success) {
      message.textContent = "‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥";
      localStorage.setItem("login", currentLogin);
      // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç:
      // window.location.href = "store.html";
    } else {
      message.textContent =
        data.error === "wrong_password"
          ? "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
          : data.error === "password_already_set"
          ? "‚ö†Ô∏è –ü–∞—Ä–æ–ª—å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
          : "‚ö†Ô∏è –û—à–∏–±–∫–∞";
    }
  } catch (err) {
    console.error(err);
    message.textContent = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ‚ùó";
  }
};
